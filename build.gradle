buildscript {
  ext.kotlin_version = '1.0.4'

  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2"
    }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'gradle.plugin.com.github.maiflai:gradle-scalatest:0.14'
  }
}


allprojects  {
  apply plugin: 'maven'
  apply plugin: 'jacoco'
  apply plugin: 'com.github.maiflai.scalatest'
  group = 'sip'
  version = '1.0-SNAPSHOT'

  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2"
    }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'kotlin'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  tasks.withType(JavaCompile) {
  	options.encoding = 'UTF-8'
  }

  dependencies {
    compile group: 'javax.inject', name: 'javax.inject', version:'1'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.21'
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    testCompile group: 'org.scalactic', name: 'scalactic_2.11', version: '3.0.0'
    testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '3.0.0'
    testRuntime group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
  }
}

task codeCoverageReport(type: JacocoReport) {
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

  subprojects.each {
    sourceSets it.sourceSets.main
  }

  reports {
    xml.enabled true
    xml.destination "${buildDir}/reports/jacoco/report.xml"
    html.enabled false
    csv.enabled false
  }
}

codeCoverageReport.dependsOn {
  subprojects*.test
}
